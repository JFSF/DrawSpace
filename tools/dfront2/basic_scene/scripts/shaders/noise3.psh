

sampler2D TexturePerlin : register(s0);

struct PS_INTPUT 
{
	float4 Position : POSITION0;
	float4 TexCoord0: TEXCOORD0;
	float4 TexCoord1: TEXCOORD1;
};


double Fractal_fBm( double3 f, int nbOctaves, double lacunarity, double roughness )
{
	int i;
	// Initialize locals
	double fValue = 0.0;
	double3 fTemp;

	fTemp = f;
	double prev = 1.0;
	double fexp = 1.0;

	// Inner loop of spectral construction, where the fractal is built
	for( i = 0; i < nbOctaves; i++ )
	{	
		float4 tc = 0.0;
		tc[0] = fTemp[0];
		tc[1] = fTemp[1];

		fValue += tex2Dlod( TexturePerlin, tc ) * pow( fexp, -roughness );
		
		fTemp *= lacunarity;
		fexp *= lacunarity;
	}	
	return clamp( -1.0, 1.0, fValue );
}


float4 ps_main( PS_INTPUT input ) : COLOR0
{
	float4 color = 0;
	
	double3 f = 0.0;
	

	f[0] = lerp( 0.5, 0.85, input.TexCoord0.x );
	f[1] = lerp( 0.5, 0.85, input.TexCoord0.y );
	f[2] = 1.0;
	
	
	float res;

	res = Fractal_fBm( f, 19, 2.0, 0.75 );

	if( res > 0.0 )
	{
		color = ( res * 0.5 ) + 0.5;
	}
	else
	{
		color.x = 0;
		color.y = 0;
		color.z = 1.0;
		color.w = 0.0;
	}

	return color;
}
