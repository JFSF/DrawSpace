
float4 flag0 : register(c0);
  // .x -> altitude relative viewer
  // .y -> altitude relative transition ocean global/ocean detaillé

float4 color : register(c1);

sampler2D Texture0 : register(s0);
sampler2D Texture1 : register(s1);
sampler2D Texture2 : register(s2);

struct PS_INTPUT 
{
	float4 Position : POSITION0;
	float4 TexCoord0: TEXCOORD0;
};


float4 ps_main( PS_INTPUT input ) : COLOR0
{   
	float4 scene_color = tex2D( Texture0, input.TexCoord0 );
    
    //if (scene_color.x == 1.0 && scene_color.y == 0.0 && scene_color.z == 1.0)

    if( scene_color.w == 0.0)
    {
        float4 bump_color = tex2D(Texture2, input.TexCoord0);
        float4 sea_color = scene_color;
        sea_color.w = 1.0;
        
        float3 bump = bump_color.xyz;        
        float2 mt = input.TexCoord0.xy + bump.xz;
        
        float4 water_color = color * tex2D(Texture1, mt);

        scene_color = lerp(water_color, sea_color, saturate((flag0.x - 1.0) / (flag0.y - 1.0)));

    }
    return scene_color;
}
