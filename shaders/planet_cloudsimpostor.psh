
float4 fog_color        : register(c0);
float4 ldir             : register(c1);
float4 lcolor           : register(c2);
float4 flags            : register(c3);
// .x -> alpha
// .y -> clip distance


sampler2D Texture0: register(s0);

struct PS_INTPUT 
{
	float4 TexCoord0:    TEXCOORD0;
	float4 Color:	     TEXCOORD1;
    float4 Posdir:       TEXCOORD2;
    float4 PosCamSpace : TEXCOORD3;
    float  Fog :         FOG;
};


float4 ps_main( PS_INTPUT input ) : COLOR0
{
	float4 ret_color;

    float clip_distance = flags.y;
    clip(input.PosCamSpace.z < -clip_distance ? -1 : 1);

    float ldot = saturate(dot(input.Posdir.xyz, ldir.xyz) + 0.35);

    ret_color = lcolor * ldot * saturate(lerp(fog_color, input.Color, input.Fog));
    float alpha = flags.x;
    ret_color.a = tex2D(Texture0, input.TexCoord0).r * alpha;

	return ret_color;
}
